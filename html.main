<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>WebAR com Detecção da Palma da Mão</title>
  <script src="https://cdn.jsdelivr.net/npm/three@0.142.0"></script>
  <script src="https://cdn.jsdelivr.net/npm/@mediapipe/hands@0.0.3"></script>
  <script src="https://cdn.jsdelivr.net/npm/ar.js@2.0.1"></script>
  <style>
    body {
      margin: 0;
      overflow: hidden;
    }
  </style>
</head>
<body>
  <canvas id="renderer"></canvas>
  <script>
    // Definir cena e câmera
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);

    // Definir renderizador
    const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('renderer') });
    renderer.setSize(window.innerWidth, window.innerHeight);

    // Definir luz ambiente
    const ambientLight = new THREE.AmbientLight(0xffffff, 0.5);
    scene.add(ambientLight);

    // Definir esfera
    const sphereGeometry = new THREE.SphereGeometry(0.1, 32, 32);
    const sphereMaterial = new THREE.MeshBasicMaterial({ color: 0xff0000 });
    const sphere = new THREE.Mesh(sphereGeometry, sphereMaterial);
    sphere.visible = false;
    scene.add(sphere);

    // Definir detector de mãos
    const hands = new mediapipe.Hands({
      maxNumHands: 1,
      modelComplexity: 0,
      locateLandmarks: true
    });

    // Definir AR.js
    const ar = new AR({
      sourceType: 'webcam'
    });

    ar.on('webcamReady', () => {
      ar.scanMarker('hiro', () => {
        // Marcador Hiro detectado, iniciar loop de renderização
        animate();
      });
    });

    // Função de animação
    function animate() {
      requestAnimationFrame(animate);

      // Processar imagem da webcam
      ar.process(renderer.domElement);

      // Detectar mãos na imagem
      hands.process(renderer.domElement);

      // Obter dados da mão
      const handLandmarks = hands.results.multiHandLandmarks[0];

      // Verificar se a palma da mão está presente
      if (handLandmarks) {
        // Obter posição da palma da mão
        const palmPosition = handLandmarks[0];

        // Posicionar a esfera na palma da mão
        sphere.position.set(palmPosition[0], palmPosition[1], palmPosition[2]);
        sphere.visible = true;
      } else {
        sphere.visible = false;
      }

      // Renderizar cena
      renderer.render(scene, camera);
    }
  </script>
</body>
</html>
